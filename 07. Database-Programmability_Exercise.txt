01. Employees with Salary Above 35000
CREATE PROCEDURE usp_get_employees_salary_above_35000()
BEGIN
    SELECT `first_name`, `last_name` FROM `employees`
    WHERE `salary` > 35000
    ORDER BY `first_name`, `last_name`, `employee_id`;
END

02. Employees with Salary Above Number
CREATE PROCEDURE usp_get_employees_salary_above (`number` DECIMAL(19,4))
BEGIN
    SELECT `first_name`, `last_name` FROM `employees`
    WHERE `salary` >= `number`
    ORDER BY `first_name`, `last_name`, `employee_id`;
END

03. Town Names Starting With
CREATE PROCEDURE usp_get_towns_starting_with(given_string VARCHAR(50))
BEGIN
    SELECT `name` FROM `towns`
    WHERE `name`LIKE  CONCAT(given_string, '%')
    ORDER BY `name`;
END 

04. Employees from Town
CREATE PROCEDURE usp_get_employees_from_town (town_name VARCHAR(50))
BEGIN
	SELECT `first_name`, `last_name` FROM `employees` AS e
    JOIN `addresses` AS a ON e.`address_id` = a.`address_id`
    JOIN `towns` AS t ON a.`town_id` = t.`town_id`
    WHERE t.`name` = town_name
    ORDER BY e.`first_name`, e.`last_name`, e.`employee_id`;
END 

05. Salary Level Function
CREATE FUNCTION ufn_get_salary_level(salary DECIMAL)
RETURNS VARCHAR(10)
DETERMINISTIC
BEGIN
	DECLARE salary_level VARCHAR(10);
        SET salary_level := (CASE WHEN salary < 30000 THEN 'Low'
			      WHEN salary BETWEEN (30000) AND (50000) THEN 'Average'
                              WHEN salary > 50000 THEN 'High'
                              END);
	
    RETURN salary_level;
END

06. Employees by Salary Level
CREATE PROCEDURE usp_get_employees_by_salary_level(salary_level VARCHAR(10))
BEGIN
  SELECT `first_name`, `last_name` FROM `employees`
  WHERE ufn_get_salary_level(`salary`) LIKE salary_level
  ORDER BY `first_name` DESC, `last_name` DESC;
END

07. Define Function
CREATE FUNCTION ufn_is_word_comprised(set_of_letters varchar(50), word varchar(50))
RETURNS INT
DETERMINISTIC
BEGIN
      RETURN word REGEXP (CONCAT('^[', set_of_letters, ']+$'));
END

08. Find Full Name
CREATE PROCEDURE usp_get_holders_full_name()
BEGIN
     SELECT CONCAT_WS(" ", `first_name`, `last_name`) AS `full_name` FROM `account_holders`
     ORDER BY `full_name`, `id`;
END

