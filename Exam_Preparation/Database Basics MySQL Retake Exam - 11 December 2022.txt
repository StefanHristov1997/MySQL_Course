01. Table Design
CREATE TABLE `countries` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(30) NOT NULL UNIQUE,
    `description` TEXT,
    `currency` VARCHAR(5) NOT NULL
);

CREATE TABLE `airplanes` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `model` VARCHAR(50) NOT NULL UNIQUE,
    `passengers_capacity` INT NOT NULL,
    `tank_capacity` DECIMAL(19 , 2 ) NOT NULL,
    `cost` DECIMAL(19 , 2 ) NOT NULL
);

CREATE TABLE `passengers` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHAR(30) NOT NULL,
    `last_name` VARCHAR(30) NOT NULL,
    `country_id` INT NOT NULL,
    CONSTRAINT fk_passengers_coutries FOREIGN KEY (`country_id`)
        REFERENCES countries (`id`)
);

CREATE TABLE `flights` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `flight_code` VARCHAR(30) NOT NULL UNIQUE,
    `departure_country` INT NOT NULL,
    `destination_country` INT NOT NULL,
    `airplane_id` INT NOT NULL,
    `has_delay` BOOLEAN,
    `departure` DATETIME,
    CONSTRAINT fk_departures_countries FOREIGN KEY (`departure_country`)
        REFERENCES countries (`id`),
    CONSTRAINT fk_destinations_countries FOREIGN KEY (`destination_country`)
        REFERENCES countries (`id`),
    CONSTRAINT fk_flights_airplanes FOREIGN KEY (`airplane_id`)
        REFERENCES airplanes (`id`)
);

CREATE TABLE `flights_passengers` (
    `flight_id` INT,
    `passenger_id` INT,
    CONSTRAINT fk_flights_flightID FOREIGN KEY (`flight_id`)
        REFERENCES flights (`id`),
    CONSTRAINT fk_passengers_passengerID FOREIGN KEY (`passenger_id`)
        REFERENCES passengers (`id`)
);

02. Insert
INSERT INTO `airplanes` (`model`,`passengers_capacity`, `tank_capacity`, `cost`)
SELECT DISTINCT(CONCAT(REVERSE(p.`first_name`), '797')), (CHAR_LENGTH(p.`last_name`) * 17), (p.`id` * 790), (CHAR_LENGTH(p.`first_name`) * 50.6) FROM passengers AS p
WHERE p.`id` <= 5;

03. Update
UPDATE `flights`
SET `airplane_id` = `airplane_id` + 1
WHERE `departure_country` = 22;

04. Delete
DELETE f FROM `flights` AS f
LEFT JOIN flights_passengers AS fp ON fp.`flight_id` = f.`id`
WHERE fp.`passenger_id` IS NULL;

05. Airplanes
SELECT * FROM `airplanes`
ORDER BY `cost` DESC, `id` DESC;

06. Flights from 2022
SELECT `flight_code`, `departure_country`, `airplane_id`, `departure` FROM `flights`
WHERE YEAR(`departure`) = 2022
ORDER BY `airplane_id`, `flight_code`
LIMIT 20;

07. Private flights
SELECT 
    CONCAT(UPPER(LEFT(`last_name`, 2)),
            `country_id`) AS `flight_code`,
    CONCAT_WS(' ', `first_name`, `last_name`) AS `full_name`,
    `country_id`
FROM
    `passengers` AS p
        LEFT JOIN
    `flights_passengers` AS fp ON fp.`passenger_id` = p.`id`
WHERE
    fp.`flight_id` IS NULL
ORDER BY p.`country_id`;

08. Leading destinations
SELECT 
    `name`, `currency`, COUNT(fp.`passenger_id`) AS `booked_tickets`
FROM
    `countries` AS c
JOIN `flights` AS f ON f.`destination_country` = c.`id`
JOIN `flights_passengers` AS fp ON fp.`flight_id` = f.`id`
GROUP BY c.`name`
HAVING `booked_tickets` >= 20
ORDER BY `booked_tickets` DESC;

09. Parts of the day
SELECT `flight_code`, `departure`, 
(CASE WHEN HOUR(`departure`) >= 21 OR HOUR(`departure`) < 5 THEN 'Night'
      WHEN HOUR(`departure`) >= 5 AND HOUR(`departure`) < 12 THEN 'Morning'
	  WHEN HOUR(`departure`) >= 12 AND HOUR(`departure`) < 17 THEN 'Afternoon'
      WHEN HOUR(`departure`) >= 17 AND HOUR(`departure`) < 21 THEN 'Evening'
 
 END) AS `day_part` 
 FROM `flights`
 ORDER BY `flight_code` DESC;

​​10. Number of flights
CREATE FUNCTION udf_count_flights_from_country(country VARCHAR(50))
RETURNS INT
DETERMINISTIC
BEGIN 
         DECLARE count_flights_from_country INT;
         SET count_flights_from_country := (SELECT COUNT(`id`) FROM `flights`
                                            WHERE `departure_country` = (SELECT `id` FROM `countries`
                                                                         WHERE `name` = country));
                                            
	RETURN count_flights_from_country;
END;

11. Delay flight
CREATE PROCEDURE udp_delay_flight(flight_code VARCHAR(50))
BEGIN 
      UPDATE `flights`
      SET `has_delay` = 1 
      WHERE `flight_code` = flight_code;
      
      UPDATE `flights`
      SET `departure` = ADDTIME(`departure`, "00:30:00")
      WHERE `flight_code` = flight_code;
END;
​
